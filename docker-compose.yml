version: "3.8"

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile # Specify the Dockerfile to use
    volumes:
      - .:/app # Mount your app directory
    environment:
      - DEBUG=${DEBUG} # Set to False in production
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=${DATABASE_HOST}
      - DJANGO_SETTINGS_MODULE=classattendance.settings.production
    networks:
      - tutor_local_default
      - internal-network
    depends_on:
      - db
      - redis
    command: python manage.py runserver 0.0.0.0:8000 # Change this for production

  redis:
    image: redis:alpine
    ports:
      - "6379"
    networks:
      - internal-network

  celery:
    build: .
    command: ["celery", "-A", "exposingscams", "worker", "--loglevel=info"]
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - tutor_local_default
      - internal-network

  db:
    image: postgres:latest
    environment:
      - POSTGRES_DB=${DATABASE_NAME} # Replace with your database name
      - POSTGRES_USER=${DATABASE_USER} # Replace with your database user
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD} # Replace with your database password
    ports:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - internal-network

volumes:
  postgres_data:

networks:
  tutor_local_default:
    external: true
  internal-network:
    external: false
